workspace "CoffeeTech System" "Mobile application using Machine Learning and IoT Technologies" {

    !impliedRelationships "false" 
    !identifiers "hierarchical" 

    model {
        Cooperativa = person "Cooperativa" "Coffee growing company" "Cooperativa" 
        Agricultores = person "Agricultor" "Coffee crop farmers" "Agricultores"
        Operador = person "Operador" "Support of cooperatives and farmers" "Operador" 
        CoffeeTech = softwareSystem "CoffeeTech" "Mobile application using Machine Learning and IoT Technologies" "CoffeeTech" {
            MySQL = container "Data Base" "Azure Data Base" "MySQL" "BD"
            MachineLearningAPI = container "MachineLearningAPI" "MachineLearningAPI" "JEE 8080" "API"
            APIGatewayFTR = container "APIGatewayFTR" "Microsoft Azure" "" "API"
            SensorMonitoringContext = container "Sensor Data Management Context" "Registration and storage of data from sensors IoT." "" "Servicio"{
                DevicesController = component "Devices Controller" "REST API endpoints for devices" ".NET" "Componente" 
                DevicesApplicationService = component "Devices Application Service" "Provides methods for managing devices" ".NET" "Componente" 
                DevicesRepository = component "Devices Repository" "Devices Information" ".NET" "Componente"
                DomainLayer = component "Domain Layer" "" ".NET" "Componente"
            }
            ContextAgronomicRecommendations = container "Agronomic Recommendations Context" "Generation of recommendations based on sensor data." "" "Servicio"{
                RecommendationsController = component "Recommendations Controller" "REST API endpoints for recommendations" ".NET" "Componente" 
                RecommendationsApplicationService = component "Recommendations Application Service" "Provides methods for managing recommendations" ".NET" "Componente" 
                PredictionsRepository = component "Predictions Repository" "Recommendations Information" ".NET" "Componente"
                DomainLayer = component "Domain Layer" "" ".NET" "Componente"
            }
            ManagementAuthenticationContext = container "Identity and Access Management Context" "Management of system users, whether farmers or managers." "" "Servicio"{
                UsersController = component "Users Controller" "REST API for users" ".NET" "Componente" 
                UserApplicationService = component "User ApplicationService" "Provides methods for managing users" ".NET" "Componente" 
                UsersRepository = component "Users Repository" "Responsible for persistence and recovery of data related to users" ".NET" "Componente"
                AuthenticationController = component "Authentication Controller" "REST API for users authentication" ".NET" "Componente" 
                AuthenticationApplicationService = component "Authentication Application Service" "Provides methods for managing users authentication" ".NET" "Componente" 
                AuthenticationRepository = component "Authentication Repository" "Authentication users informacion" ".NET" "Componente"
                DomainLayer = component "Domain Layer" "" ".NET" "Componente"
            }
            NotificationsAlertsContext = container "Notifications and Alerts Context" "Sending push notifications to mobile devices." "" "Servicio"{
                MessageController = component "Message Controller" "REST API for notifications" ".NET" "Componente" 
                MessageApplicationService = component "Message Application Service" "Managing notifications" ".NET" "Componente" 
                MessageRepository = component "MessageRepository" "Notificationes information" ".NET" "Componente"
                DomainLayer = component "Domain Layer" "" ".NET" "Componente"
            }
            FarmManagementContext = container "Farm and Section Management Context" "Creation for the management of the estates and their sections." "" "Servicio"{
                FarmManagementController = component "Farm Management Controller" "REST API endpoints for farm management" ".NET" "Componente" 
                FarmManagementApplicationService = component "Farm Management Application Service" "Farm Management Application Service" ".NET" "Componente" 
                FarmManagementRepository = component "Farm Management Repository" "Information for Farm Management" ".NET" "Componente"
                DomainLayer = component "Domain Layer" "" ".NET" "Componente"
            }
            WebApplication = container "WebApplication" "" "" "Web Browser"
            SinglePageApplication = container "SinglePageApplication" "" "" "Web Browser"
            MobileApplication = container "MobileApplication" "" "" "Mobile App"
            EdgeAPI = container "EdgeAPI" "Embbeded Manager" "" "API"
            EmbeddedApp = container "EmbeddedApp" "" "" "API"
            EdgeSPA = container "Edge Single Page Application" "" "" "API"
        }
        PushNotificationProvider = softwareSystem "Push Notification Provider" "" "PushNotificationProvider"
        MeteorologicalService = softwareSystem "Meteorological Service" "" "MeteorologicalService"
        MLmodelAPI  = softwareSystem "ML Model API" "Data for recommendation" "MLmodelAPI"
        CoffeeTech -> PushNotificationProvider "Report"
        CoffeeTech -> MeteorologicalService "Report"
        CoffeeTech -> MLmodelAPI "Report"
        CoffeeTech.SinglePageApplication -> CoffeeTech.APIGatewayFTR ""
        CoffeeTech.APIGatewayFTR -> CoffeeTech.SensorMonitoringContext "Read and Write"
        CoffeeTech.APIGatewayFTR -> CoffeeTech.ContextAgronomicRecommendations "Read and Write"
        CoffeeTech.APIGatewayFTR -> CoffeeTech.NotificationsAlertsContext "Read and Write"
        CoffeeTech.APIGatewayFTR -> CoffeeTech.FarmManagementContext "Read and Write"

        CoffeeTech.APIGatewayFTR -> CoffeeTech.ManagementAuthenticationContext "Read and Write"
        CoffeeTech.SensorMonitoringContext -> CoffeeTech.MySQL "Writes"
        CoffeeTech.ContextAgronomicRecommendations -> CoffeeTech.MySQL "Writes"
        CoffeeTech.NotificationsAlertsContext -> CoffeeTech.MySQL "Writes"

        CoffeeTech.ManagementAuthenticationContext -> CoffeeTech.MySQL "Writes"
        CoffeeTech.FarmManagementContext -> CoffeeTech.MySQL "Writes"
        Cooperativa -> CoffeeTech.MobileApplication "Uses"
        Cooperativa -> CoffeeTech.SinglePageApplication "Uses"
        Cooperativa -> CoffeeTech.WebApplication "Uses"
        Operador -> CoffeeTech.MobileApplication "Uses"
        Operador -> CoffeeTech.SinglePageApplication "Uses"
        Operador -> CoffeeTech.WebApplication "Uses"
        Agricultores -> CoffeeTech.MobileApplication "Uses"
        Agricultores -> CoffeeTech.SinglePageApplication "Uses"
        CoffeeTech.WebApplication -> CoffeeTech.SinglePageApplication "Authorize"
        PushNotificationProvider -> CoffeeTech.NotificationsAlertsContext "Writes" 
        CoffeeTech.MobileApplication -> CoffeeTech.APIGatewayFTR "Update"
        CoffeeTech.WebApplication -> CoffeeTech.APIGatewayFTR "Update"
        CoffeeTech.MachineLearningAPI -> CoffeeTech.APIGatewayFTR "Update"
        MeteorologicalService -> CoffeeTech.ContextAgronomicRecommendations "Update"
        CoffeeTech.EdgeAPI -> CoffeeTech.APIGatewayFTR "Update"
        CoffeeTech.EmbeddedApp -> CoffeeTech.EdgeAPI "Update"
        CoffeeTech.EdgeSPA -> CoffeeTech.EdgeAPI "Update"
        Cooperativa -> CoffeeTech "Uses" "WEB" 
        Agricultores -> CoffeeTech "Uses" "Web"
        Operador -> CoffeeTech  "Uses" "WEB"
        CoffeeTech.MachineLearningAPI -> MLmodelAPI "Update" ""
        
        //SensorMonitoringContext
        CoffeeTech.APIGatewayFTR -> CoffeeTech.SensorMonitoringContext.DevicesController "" ""
        CoffeeTech.SensorMonitoringContext.DevicesController -> CoffeeTech.SensorMonitoringContext.DevicesApplicationService "" ""
        CoffeeTech.SensorMonitoringContext.DevicesApplicationService -> CoffeeTech.SensorMonitoringContext.DevicesRepository "" ""
        CoffeeTech.SensorMonitoringContext.DevicesApplicationService -> CoffeeTech.SensorMonitoringContext.DomainLayer "" ""
        CoffeeTech.SensorMonitoringContext.DevicesRepository -> CoffeeTech.MySQL "" ""
        
        //ContextAgronomicRecommendations
        CoffeeTech.APIGatewayFTR -> CoffeeTech.ContextAgronomicRecommendations.RecommendationsController "" ""
        CoffeeTech.ContextAgronomicRecommendations.RecommendationsController -> CoffeeTech.ContextAgronomicRecommendations.RecommendationsApplicationService "" ""
        CoffeeTech.ContextAgronomicRecommendations.RecommendationsApplicationService -> CoffeeTech.ContextAgronomicRecommendations.PredictionsRepository "" ""
        CoffeeTech.ContextAgronomicRecommendations.RecommendationsApplicationService -> CoffeeTech.ContextAgronomicRecommendations.DomainLayer "" ""
        CoffeeTech.ContextAgronomicRecommendations.PredictionsRepository -> CoffeeTech.MySQL "" ""
        
        //ManagementAuthenticationContext
        CoffeeTech.APIGatewayFTR -> CoffeeTech.ManagementAuthenticationContext.UsersController "" ""
        CoffeeTech.APIGatewayFTR -> CoffeeTech.ManagementAuthenticationContext.AuthenticationController "" ""
        CoffeeTech.ManagementAuthenticationContext.UsersController -> CoffeeTech.ManagementAuthenticationContext.UserApplicationService "" ""
        CoffeeTech.ManagementAuthenticationContext.AuthenticationController -> CoffeeTech.ManagementAuthenticationContext.AuthenticationApplicationService "" ""
        CoffeeTech.ManagementAuthenticationContext.UserApplicationService -> CoffeeTech.ManagementAuthenticationContext.UsersRepository "" ""
        CoffeeTech.ManagementAuthenticationContext.AuthenticationApplicationService -> CoffeeTech.ManagementAuthenticationContext.AuthenticationRepository "" ""
        CoffeeTech.ManagementAuthenticationContext.UserApplicationService -> CoffeeTech.ManagementAuthenticationContext.DomainLayer "" ""
        CoffeeTech.ManagementAuthenticationContext.AuthenticationApplicationService -> CoffeeTech.ManagementAuthenticationContext.DomainLayer "" ""
        CoffeeTech.ManagementAuthenticationContext.UsersRepository -> CoffeeTech.MySQL "" ""
        CoffeeTech.ManagementAuthenticationContext.AuthenticationRepository -> CoffeeTech.MySQL "" ""
        
        //NotificationsAlertsContext
        CoffeeTech.APIGatewayFTR -> CoffeeTech.NotificationsAlertsContext.MessageController "" ""
        CoffeeTech.NotificationsAlertsContext.MessageController -> CoffeeTech.NotificationsAlertsContext.MessageApplicationService "" ""
        CoffeeTech.NotificationsAlertsContext.MessageApplicationService -> CoffeeTech.NotificationsAlertsContext.MessageRepository "" ""
        CoffeeTech.NotificationsAlertsContext.MessageApplicationService -> CoffeeTech.NotificationsAlertsContext.DomainLayer "" ""
        CoffeeTech.NotificationsAlertsContext.MessageRepository -> CoffeeTech.MySQL "" ""
        PushNotificationProvider ->  CoffeeTech.NotificationsAlertsContext.MessageApplicationService "" "" 
        
        //FarmManagementContext
        CoffeeTech.APIGatewayFTR -> CoffeeTech.FarmManagementContext.FarmManagementController "" ""
        CoffeeTech.FarmManagementContext.FarmManagementController -> CoffeeTech.FarmManagementContext.FarmManagementApplicationService "" ""
        CoffeeTech.FarmManagementContext.FarmManagementApplicationService -> CoffeeTech.FarmManagementContext.FarmManagementRepository "" ""
        CoffeeTech.FarmManagementContext.FarmManagementApplicationService -> CoffeeTech.FarmManagementContext.DomainLayer "" ""
        CoffeeTech.FarmManagementContext.FarmManagementRepository -> CoffeeTech.MySQL "" ""
    }

    views {
        systemContext CoffeeTech "Contexto" "Context Diagram" {
            include Cooperativa 
            include Agricultores 
            include Operador 
            include CoffeeTech 
            include PushNotificationProvider
            include MeteorologicalService
        }

        container CoffeeTech "Contenedores" "Vista de contenedores CoffeeTech" {
            include Cooperativa
            include Agricultores
            include Operador
            include PushNotificationProvider
            include MeteorologicalService
            
            include CoffeeTech.SensorMonitoringContext
            include CoffeeTech.ManagementAuthenticationContext
            include CoffeeTech.ContextAgronomicRecommendations
            include CoffeeTech.NotificationsAlertsContext
            include CoffeeTech.FarmManagementContext
            include CoffeeTech.APIGatewayFTR
            include CoffeeTech.MachineLearningAPI
            
            include CoffeeTech.WebApplication
            include CoffeeTech.SinglePageApplication
            include CoffeeTech.EdgeAPI
            include CoffeeTech.MobileApplication
            include CoffeeTech.EmbeddedApp
            include CoffeeTech.EdgeSPA
            include CoffeeTech.MySQL
        }
        
        component CoffeeTech.SensorMonitoringContext "ComponentSensorMonitoring" {
            include CoffeeTech.APIGatewayFTR
            include CoffeeTech.WebApplication
            include CoffeeTech.MobileApplication
            include CoffeeTech.SensorMonitoringContext.DevicesController
            include CoffeeTech.SensorMonitoringContext.DevicesApplicationService
            include CoffeeTech.SensorMonitoringContext.DevicesRepository 
            include CoffeeTech.SensorMonitoringContext.DomainLayer
            include CoffeeTech.MySQL
        }
        
        component CoffeeTech.ContextAgronomicRecommendations "ComponenteRecommendations" {
            include CoffeeTech.APIGatewayFTR
            include CoffeeTech.WebApplication
            include CoffeeTech.MobileApplication
            include CoffeeTech.ContextAgronomicRecommendations.RecommendationsController
            include CoffeeTech.ContextAgronomicRecommendations.RecommendationsApplicationService
            include CoffeeTech.ContextAgronomicRecommendations.PredictionsRepository 
            include CoffeeTech.ContextAgronomicRecommendations.DomainLayer
            include CoffeeTech.MySQL
        }
        
        component CoffeeTech.ManagementAuthenticationContext "ComponenteAutenticacion" {
            include CoffeeTech.APIGatewayFTR
            include CoffeeTech.WebApplication
            include CoffeeTech.MobileApplication
            include CoffeeTech.ManagementAuthenticationContext.UsersController
            include CoffeeTech.ManagementAuthenticationContext.UserApplicationService
            include CoffeeTech.ManagementAuthenticationContext.UsersRepository 
            include CoffeeTech.ManagementAuthenticationContext.AuthenticationController
            include CoffeeTech.ManagementAuthenticationContext.AuthenticationApplicationService
            include CoffeeTech.ManagementAuthenticationContext.AuthenticationRepository
            include CoffeeTech.ManagementAuthenticationContext.DomainLayer
            include CoffeeTech.MySQL
        }
        
        component CoffeeTech.NotificationsAlertsContext "ComponenteNotificaciones" {
            include CoffeeTech.APIGatewayFTR
            include CoffeeTech.WebApplication
            include CoffeeTech.MobileApplication
            include CoffeeTech.NotificationsAlertsContext.MessageController
            include CoffeeTech.NotificationsAlertsContext.MessageApplicationService
            include CoffeeTech.NotificationsAlertsContext.MessageRepository 
            include CoffeeTech.NotificationsAlertsContext.DomainLayer
            include CoffeeTech.MySQL
            include PushNotificationProvider
        }
        
        component CoffeeTech.FarmManagementContext "ComponenteFarmManagement" {
            include CoffeeTech.APIGatewayFTR
            include CoffeeTech.WebApplication
            include CoffeeTech.MobileApplication
            include CoffeeTech.FarmManagementContext.FarmManagementController
            include CoffeeTech.FarmManagementContext.FarmManagementApplicationService
            include CoffeeTech.FarmManagementContext.FarmManagementRepository 
            include CoffeeTech.FarmManagementContext.DomainLayer
            include CoffeeTech.MySQL
        }
        
        styles {
            element "Operador" {
                shape "Person" 
                background "#26cf48" 
                color "#ffffff" 
            }
            element "BD" {
                shape "Cylinder" 
                background "#ec0e0e" 
                color "#ffffff" 
            }
            element "Person" {
                shape "Person" 
                background "#232ecd" 
                color "#ffffff" 
            }
            element "CoffeeTech" {
                shape "RoundedBox" 
                background "#d49816"
                color "#ffffff"
            }
            element "Servicio"{
                shape "Hexagon"
                background "#B057F5"
                color "#ffffff"
            }
            element "Mobile App" {
                shape MobileDeviceLandscape
                background #438dd5
                color "#ffffff"
            }
            element "Web Browser" {
                shape WebBrowser
                background #438dd5
                color "#ffffff"
            }
            element "Contenedor" {
                background #85bbf0
                color "#ffffff"
            }
            element "API" {
                background #85bbf0
                color "#ffffff"
            }
        }

    }

}
