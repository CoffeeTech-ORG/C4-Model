workspace "CoffeeTech System" "Mobile application using Machine Learning and IoT Technologies" {

    !impliedRelationships "false" 
    !identifiers "hierarchical" 

    model {
        Cooperativa = person "Cooperativa" "Coffee growing company" "Cooperativa" 
        Agricultores = person "Agricultor" "Coffee crop farmers" "Agricultores"
        Operador = person "Operador" "Support of cooperatives and farmers" "Operador" 
        CoffeeTech = softwareSystem "CoffeeTech" "Mobile application using Machine Learning and IoT Technologies" "CoffeeTech" {
            MySQL = container "Data Base" "Azure Data Base" "MySQL" "BD"
            MachineLearningAPI = container "MachineLearningAPI" "MachineLearningAPI" "JEE 8080" "API"
            APIGatewayFTR = container "APIGatewayFTR" "Microsoft Azure" "" "API"
            SensorMonitoringContext = container "Sensor Monitoring Context" "Registration and storage of data from sensors." "" "Servicio"
            ContextAgronomicRecommendations = container "Agronomic Recommendations Context" "Generation of recommendations based on sensor data." "" "Servicio"
            ManagementAuthenticationContext = container "Management and Authentication Context" "Registration and storage of data from sensors." "" "Servicio"{
                UsersController = component "Users Controller" "REST API for users" ".NET" "Componente" 
                UserApplicationService = component "User ApplicationService" "Provides methods for managing users" ".NET" "Componente" 
                UsersRepository = component "Users Repository" "Responsible for persistence and recovery of data related to users" ".NET" "Componente"
                AuthenticationController = component "Authentication Controller" "REST API for users authentication" ".NET" "Componente" 
                AuthenticationApplicationService = component "Authentication Application Service" "Provides methods for managing users authentication" ".NET" "Componente" 
                AuthenticationRepository = component "Authentication Repository" "Authentication users informacion" ".NET" "Componente"
                DomainLayer = component "Domain Layer" "" ".NET" "Componente"
            }
            NotificationsAlertsContext = container "Notifications and Alerts Context" "Sending push notifications to mobile devices." "" "Servicio"{
                MessageController = component "Message Controller" "REST API for notifications" ".NET" "Componente" 
                MessageApplicationService = component "Message Application Service" "Managing notifications" ".NET" "Componente" 
                MessageRepository = component "MessageRepository" "Notificationes information" ".NET" "Componente"
                DomainLayer = component "Domain Layer" "" ".NET" "Componente"
            }
            ReportingContext = container "Reporting Generation Context" "Creation and management of PDF reports." "" "Servicio"{
                DeteccionFraudes = component "Deteccion de Fraudes" "" "Java  EE" "Componente" 
                SeguimientoFraudes = component "Seguimiento de Fraudes" "" "SeguimientoFraudes" "Componente" 
                PerfilEmpresaCobranza = component "PerfilEmpresaCobranza" "" "Perfil Empresa y Tipo de Cobranza" "Componente"
                ReportingContexts = component "Monitoreo de Servicios" "" "Monitoreo de Servicios" "Componente"
                MonitoreoOperaciones = component "Monitoreo de Operaciones" "Monitoreo de Operaciones" "" "Componente" 
            }
            WebApplication = container "WebApplication" "" "" "Web Browser"
            SinglePageApplication = container "SinglePageApplication" "" "" "Web Browser"
            MobileApplication = container "MobileApplication" "" "" "Mobile App"
            EdgeAPI = container "EdgeAPI" "Embbeded Manager" "" "API"
            EmbeddedApp = container "EmbeddedApp" "" "" "API"
            EdgeSPA = container "Edge Single Page Application" "" "" "API"
        }
        PushNotificationProvider = softwareSystem "Push Notification Provider" "" "PushNotificationProvider"
        MeteorologicalService = softwareSystem "Meteorological Service" "" "MeteorologicalService"
        CoffeeTech -> PushNotificationProvider "Report"
        CoffeeTech -> MeteorologicalService "Report"
        CoffeeTech.SinglePageApplication -> CoffeeTech.APIGatewayFTR ""
        CoffeeTech.APIGatewayFTR -> CoffeeTech.SensorMonitoringContext "Read and Write"
        CoffeeTech.APIGatewayFTR -> CoffeeTech.ContextAgronomicRecommendations "Read and Write"
        CoffeeTech.APIGatewayFTR -> CoffeeTech.NotificationsAlertsContext "Read and Write"
        CoffeeTech.APIGatewayFTR -> CoffeeTech.ReportingContext "Read and Write"

        CoffeeTech.APIGatewayFTR -> CoffeeTech.ManagementAuthenticationContext "Read and Write"
        CoffeeTech.SensorMonitoringContext -> CoffeeTech.MySQL "Writes"
        CoffeeTech.ContextAgronomicRecommendations -> CoffeeTech.MySQL "Writes"
        CoffeeTech.NotificationsAlertsContext -> CoffeeTech.MySQL "Writes"

        CoffeeTech.ManagementAuthenticationContext -> CoffeeTech.MySQL "Writes"
        CoffeeTech.ReportingContext -> CoffeeTech.MySQL "Writes"
        Cooperativa -> CoffeeTech.MobileApplication "Uses"
        Cooperativa -> CoffeeTech.SinglePageApplication "Uses"
        Cooperativa -> CoffeeTech.WebApplication "Uses"
        Operador -> CoffeeTech.MobileApplication "Uses"
        Operador -> CoffeeTech.SinglePageApplication "Uses"
        Operador -> CoffeeTech.WebApplication "Uses"
        Agricultores -> CoffeeTech.MobileApplication "Uses"
        Agricultores -> CoffeeTech.SinglePageApplication "Uses"
        CoffeeTech.WebApplication -> CoffeeTech.SinglePageApplication "Authorize"
        CoffeeTech.NotificationsAlertsContext -> PushNotificationProvider "Writes" 
        CoffeeTech.MobileApplication -> CoffeeTech.APIGatewayFTR "Update"
        CoffeeTech.WebApplication -> CoffeeTech.APIGatewayFTR "Update"
        CoffeeTech.MachineLearningAPI -> CoffeeTech.APIGatewayFTR "Update"
        MeteorologicalService -> CoffeeTech.ContextAgronomicRecommendations "Update"
        CoffeeTech.EdgeAPI -> CoffeeTech.APIGatewayFTR "Update"
        CoffeeTech.EmbeddedApp -> CoffeeTech.EdgeAPI "Update"
        CoffeeTech.EdgeSPA -> CoffeeTech.EdgeAPI "Update"
        Cooperativa -> CoffeeTech "Uses" "WEB" 
        Agricultores -> CoffeeTech "Uses" "Web"
        Operador -> CoffeeTech "Uses" "WEB"
        
        //SensorMonitoringContext
        
        //ContextAgronomicRecommendations
        
        //ManagementAuthenticationContext
        CoffeeTech.APIGatewayFTR -> CoffeeTech.ManagementAuthenticationContext.UsersController "" ""
        CoffeeTech.APIGatewayFTR -> CoffeeTech.ManagementAuthenticationContext.AuthenticationController "" ""
        CoffeeTech.ManagementAuthenticationContext.UsersController -> CoffeeTech.ManagementAuthenticationContext.UserApplicationService "" ""
        CoffeeTech.ManagementAuthenticationContext.AuthenticationController -> CoffeeTech.ManagementAuthenticationContext.AuthenticationApplicationService "" ""
        CoffeeTech.ManagementAuthenticationContext.UserApplicationService -> CoffeeTech.ManagementAuthenticationContext.UsersRepository "" ""
        CoffeeTech.ManagementAuthenticationContext.AuthenticationApplicationService -> CoffeeTech.ManagementAuthenticationContext.AuthenticationRepository "" ""
        CoffeeTech.ManagementAuthenticationContext.UserApplicationService -> CoffeeTech.ManagementAuthenticationContext.DomainLayer "" ""
        CoffeeTech.ManagementAuthenticationContext.AuthenticationApplicationService -> CoffeeTech.ManagementAuthenticationContext.DomainLayer "" ""
        CoffeeTech.ManagementAuthenticationContext.UsersRepository -> CoffeeTech.MySQL "" ""
        CoffeeTech.ManagementAuthenticationContext.AuthenticationRepository -> CoffeeTech.MySQL "" ""
        
        //NotificationsAlertsContext
        CoffeeTech.APIGatewayFTR -> CoffeeTech.NotificationsAlertsContext.MessageController "" ""
        CoffeeTech.NotificationsAlertsContext.MessageController -> CoffeeTech.NotificationsAlertsContext.MessageApplicationService "" ""
        CoffeeTech.NotificationsAlertsContext.MessageApplicationService -> CoffeeTech.NotificationsAlertsContext.MessageRepository "" ""
        CoffeeTech.NotificationsAlertsContext.MessageApplicationService -> CoffeeTech.NotificationsAlertsContext.DomainLayer "" ""
        CoffeeTech.NotificationsAlertsContext.MessageRepository -> CoffeeTech.MySQL "" ""
        
        //ReportingContext
        CoffeeTech.ReportingContext.MonitoreoOperaciones -> CoffeeTech.ReportingContext.SeguimientoFraudes "" ""
        
    }

    views {
        systemContext CoffeeTech "Contexto" "Context Diagram" {
            include Cooperativa 
            include Agricultores 
            include Operador 
            include CoffeeTech 
            include PushNotificationProvider
            include MeteorologicalService
        }

        container CoffeeTech "Contenedores" "Vista de contenedores CoffeeTech" {
            include Cooperativa 
            include CoffeeTech.MySQL
            include CoffeeTech.SensorMonitoringContext
            include CoffeeTech.ManagementAuthenticationContext
            include CoffeeTech.ContextAgronomicRecommendations
            include CoffeeTech.NotificationsAlertsContext
            include CoffeeTech.ReportingContext
            include CoffeeTech.APIGatewayFTR 
            include CoffeeTech.MachineLearningAPI
            include Agricultores 
            include CoffeeTech.WebApplication
            include CoffeeTech.SinglePageApplication
            include CoffeeTech.EdgeAPI
            include CoffeeTech.MobileApplication
            include CoffeeTech.EmbeddedApp
            include CoffeeTech.EdgeSPA
            include Operador 
            include PushNotificationProvider
            include MeteorologicalService
        }
        
        component CoffeeTech.ManagementAuthenticationContext "ComponenteAutenticacion" {
            include CoffeeTech.APIGatewayFTR
            include CoffeeTech.WebApplication
            include CoffeeTech.MobileApplication
            include CoffeeTech.ManagementAuthenticationContext.UsersController
            include CoffeeTech.ManagementAuthenticationContext.UserApplicationService
            include CoffeeTech.ManagementAuthenticationContext.UsersRepository 
            include CoffeeTech.ManagementAuthenticationContext.AuthenticationController
            include CoffeeTech.ManagementAuthenticationContext.AuthenticationApplicationService
            include CoffeeTech.ManagementAuthenticationContext.AuthenticationRepository
            include CoffeeTech.ManagementAuthenticationContext.DomainLayer
            include CoffeeTech.MySQL
        }
        
        component CoffeeTech.NotificationsAlertsContext "ComponenteNotificaciones" {
            include CoffeeTech.APIGatewayFTR
            include CoffeeTech.WebApplication
            include CoffeeTech.MobileApplication
            include CoffeeTech.NotificationsAlertsContext.MessageController
            include CoffeeTech.NotificationsAlertsContext.MessageApplicationService
            include CoffeeTech.NotificationsAlertsContext.MessageRepository 
            include CoffeeTech.NotificationsAlertsContext.DomainLayer
            include CoffeeTech.MySQL
        }
        
        component CoffeeTech.ReportingContext "ComponenteReportes" {
            include CoffeeTech.APIGatewayFTR
            include CoffeeTech.WebApplication
            include CoffeeTech.MobileApplication
            include CoffeeTech.ReportingContext.DeteccionFraudes
            include CoffeeTech.ReportingContext.SeguimientoFraudes
            include CoffeeTech.ReportingContext.ReportingContexts 
            include CoffeeTech.ReportingContext.PerfilEmpresaCobranza 
            include CoffeeTech.ReportingContext.MonitoreoOperaciones
        }
        
        styles {
            element "Operador" {
                shape "Person" 
                background "#26cf48" 
                color "#ffffff" 
            }
            element "BD" {
                shape "Cylinder" 
                background "#ec0e0e" 
                color "#ffffff" 
            }
            element "Person" {
                shape "Person" 
                background "#232ecd" 
                color "#ffffff" 
            }
            element "CoffeeTech" {
                shape "RoundedBox" 
                background "#d49816"
                color "#ffffff"
            }
            element "Servicio"{
                shape "Hexagon"
                background "#B057F5"
                color "#ffffff"
            }
            element "Mobile App" {
                shape MobileDeviceLandscape
                background #438dd5
                color "#ffffff"
            }
            element "Web Browser" {
                shape WebBrowser
                background #438dd5
                color "#ffffff"
            }
            element "Contenedor" {
                background #85bbf0
                color "#ffffff"
            }
            element "API" {
                background #85bbf0
                color "#ffffff"
            }
        }

    }

}
