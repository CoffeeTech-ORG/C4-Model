workspace "CoffeeTech System" "Mobile application using Machine Learning and IoT Technologies" {

    !impliedRelationships "false" 
    !identifiers "hierarchical" 

    model {
        Manager = person "Manager" "Coffee growing company" "Manager" 
        Farmer = person "Farmer" "Coffee crop farmers" "Farmer"
        CoffeeTech = softwareSystem "CoffeeTech" "Mobile application using Machine Learning and IoT Technologies" "CoffeeTech" {
            SQLServer = container "Database" "Azure Database" "SQL Server" "BD"
            MachineLearningAPI = container "Recommendation System RESTful API" "MachineLearningAPI" "JEE 8080" "API"
            RestFullAPI = container "CoffeeTech RESTful API" "Microsoft Azure" "" "API"
            SensorMonitoringContext = container "Sensor Data Management Context" "Registration and storage of data from sensors IoT." "" "Servicio"{
                DevicesController = component "Devices Controller" "REST API endpoints for devices" ".NET" "Componente" 
                DevicesApplicationService = component "Devices Application Service" "Provides methods for managing devices" ".NET" "Componente" 
                DevicesRepository = component "Devices Repository" "Devices Information" ".NET" "Componente"
                DomainLayer = component "Domain Layer" "" ".NET" "Componente"
            }
            ContextAgronomicRecommendations = container "Agronomic Recommendations Context" "Generation of recommendations based on sensor data." "" "Servicio"{
                RecommendationsController = component "Recommendations Controller" "REST API endpoints for recommendations" ".NET" "Componente" 
                RecommendationsApplicationService = component "Recommendations Application Service" "Provides methods for managing recommendations" ".NET" "Componente" 
                PredictionsRepository = component "Predictions Repository" "Recommendations Information" ".NET" "Componente"
                DomainLayer = component "Domain Layer" "" ".NET" "Componente"
            }
            ManagementAuthenticationContext = container "Identity and Access Management Context" "Management of system users, whether farmers or managers." "" "Servicio"{
                UsersController = component "Users Controller" "REST API for users" ".NET" "Componente" 
                UserApplicationService = component "User ApplicationService" "Provides methods for managing users" ".NET" "Componente" 
                UsersRepository = component "Users Repository" "Responsible for persistence and recovery of data related to users" ".NET" "Componente"
                AuthenticationController = component "Authentication Controller" "REST API for users authentication" ".NET" "Componente" 
                AuthenticationApplicationService = component "Authentication Application Service" "Provides methods for managing users authentication" ".NET" "Componente" 
                AuthenticationRepository = component "Authentication Repository" "Authentication users informacion" ".NET" "Componente"
                DomainLayer = component "Domain Layer" "" ".NET" "Componente"
            }
            NotificationsAlertsContext = container "Notifications and Alerts Context" "Sending push notifications to mobile devices." "" "Servicio"{
                MessageController = component "Message Controller" "REST API for notifications" ".NET" "Componente" 
                MessageApplicationService = component "Message Application Service" "Managing notifications" ".NET" "Componente" 
                MessageRepository = component "MessageRepository" "Notificationes information" ".NET" "Componente"
                DomainLayer = component "Domain Layer" "" ".NET" "Componente"
            }
            FarmManagementContext = container "Farm and Section Management Context" "Creation for the management of the estates and their sections." "" "Servicio"{
                FarmManagementController = component "Farm Management Controller" "REST API endpoints for farm management" ".NET" "Componente" 
                FarmManagementApplicationService = component "Farm Management Application Service" "Farm Management Application Service" ".NET" "Componente" 
                FarmManagementRepository = component "Farm Management Repository" "Information for Farm Management" ".NET" "Componente"
                DomainLayer = component "Domain Layer" "" ".NET" "Componente"
            }
            WebApplication = container "WebApplication" "" "Framework Vue.js and .NET" "Web Browser"
            SinglePageApplication = container "SinglePageApplication" "" "JavaScript" "Contenedor"
            MobileApplication = container "MobileApplication" "" "Framework Flutter" "Mobile App"
            EdgeAPI = container "IoT Edge Hub Embedded App & API" "Embbeded Manager" "" "API"
            EmbeddedApp = container "IoT Worker Embedded App" "" "" "API"
            EdgeSPA = container "Edge Single Page Application" "" "" "API"
        }
        PushNotificationProvider = softwareSystem "Push Notification Service Provider" "Notification service" "PushNotificationProvider"
        MeteorologicalService = softwareSystem "Weather Data Service Provider" "Platform offering weather API"  "MeteorologicalService"
        MLmodelAPI  = softwareSystem "Machine Learning Platform Service Provider" "Data for recommendation" "MLmodelAPI"
        
        CoffeeTech -> PushNotificationProvider "Report"
        CoffeeTech -> MeteorologicalService "Report"
        CoffeeTech -> MLmodelAPI "Report"
        CoffeeTech.RestFullAPI -> CoffeeTech.SQLServer "Read and write to" "JDBC"
        CoffeeTech.RestFullAPI -> PushNotificationProvider "Send notifications" ""
        CoffeeTech.RestFullAPI -> MeteorologicalService "Uses" "XML/HTTPS"
        Manager -> CoffeeTech.MobileApplication "Uses"
        Manager -> CoffeeTech.SinglePageApplication "Uses"
        Manager -> CoffeeTech.WebApplication "Uses" "HTTPS"
        Farmer -> CoffeeTech.MobileApplication "Uses"
        Farmer -> CoffeeTech.SinglePageApplication "Uses"
        CoffeeTech.WebApplication -> CoffeeTech.SinglePageApplication "Authorize"
        PushNotificationProvider -> CoffeeTech.NotificationsAlertsContext "Writes" 
        CoffeeTech.MobileApplication -> CoffeeTech.RestFullAPI "Uses"
        CoffeeTech.WebApplication -> CoffeeTech.RestFullAPI "Uses" "JSON/HTTPS"
        CoffeeTech.SinglePageApplication -> CoffeeTech.RestFullAPI "Uses" "JSON/HTTPS"
        CoffeeTech.MachineLearningAPI -> CoffeeTech.RestFullAPI "Authorize" ""
        MeteorologicalService -> CoffeeTech.ContextAgronomicRecommendations "Update"
        CoffeeTech.EdgeAPI -> CoffeeTech.RestFullAPI "Update"
        CoffeeTech.EmbeddedApp -> CoffeeTech.EdgeAPI "Send data to" 
        CoffeeTech.EdgeSPA -> CoffeeTech.EdgeAPI "Uses" "JSON/HTTPS"
        Manager -> CoffeeTech "Uses" "WEB" 
        Farmer -> CoffeeTech "Uses" "Web"
        CoffeeTech.MachineLearningAPI -> MLmodelAPI "Uses" "HTTPS"
        
        //SensorMonitoringContext
        CoffeeTech.RestFullAPI -> CoffeeTech.SensorMonitoringContext.DevicesController "" ""
        CoffeeTech.SensorMonitoringContext.DevicesController -> CoffeeTech.SensorMonitoringContext.DevicesApplicationService "" ""
        CoffeeTech.SensorMonitoringContext.DevicesApplicationService -> CoffeeTech.SensorMonitoringContext.DevicesRepository "" ""
        CoffeeTech.SensorMonitoringContext.DevicesApplicationService -> CoffeeTech.SensorMonitoringContext.DomainLayer "" ""
        CoffeeTech.SensorMonitoringContext.DevicesRepository -> CoffeeTech.SQLServer "" ""
        CoffeeTech.WebApplication -> CoffeeTech.SensorMonitoringContext.DevicesController "API Request" "JSON/HTTPS"
        CoffeeTech.MobileApplication -> CoffeeTech.SensorMonitoringContext.DevicesController "API Request" "JSON/HTTPS"
        
        //ContextAgronomicRecommendations
        CoffeeTech.RestFullAPI -> CoffeeTech.ContextAgronomicRecommendations.RecommendationsController "" ""
        CoffeeTech.ContextAgronomicRecommendations.RecommendationsController -> CoffeeTech.ContextAgronomicRecommendations.RecommendationsApplicationService "" ""
        CoffeeTech.ContextAgronomicRecommendations.RecommendationsApplicationService -> CoffeeTech.ContextAgronomicRecommendations.PredictionsRepository "" ""
        CoffeeTech.ContextAgronomicRecommendations.RecommendationsApplicationService -> CoffeeTech.ContextAgronomicRecommendations.DomainLayer "" ""
        CoffeeTech.ContextAgronomicRecommendations.PredictionsRepository -> CoffeeTech.SQLServer "" ""
        CoffeeTech.ContextAgronomicRecommendations.RecommendationsApplicationService ->  MeteorologicalService "" ""
        CoffeeTech.ContextAgronomicRecommendations.RecommendationsApplicationService ->  MLmodelAPI "" ""
        CoffeeTech.WebApplication -> CoffeeTech.ContextAgronomicRecommendations.RecommendationsController "API Request" "JSON/HTTPS"
        CoffeeTech.MobileApplication -> CoffeeTech.ContextAgronomicRecommendations.RecommendationsController "API Request" "JSON/HTTPS"
        
        //ManagementAuthenticationContext
        CoffeeTech.RestFullAPI -> CoffeeTech.ManagementAuthenticationContext.UsersController "" ""
        CoffeeTech.RestFullAPI -> CoffeeTech.ManagementAuthenticationContext.AuthenticationController "" ""
        CoffeeTech.ManagementAuthenticationContext.UsersController -> CoffeeTech.ManagementAuthenticationContext.UserApplicationService "" ""
        CoffeeTech.ManagementAuthenticationContext.AuthenticationController -> CoffeeTech.ManagementAuthenticationContext.AuthenticationApplicationService "" ""
        CoffeeTech.ManagementAuthenticationContext.UserApplicationService -> CoffeeTech.ManagementAuthenticationContext.UsersRepository "" ""
        CoffeeTech.ManagementAuthenticationContext.AuthenticationApplicationService -> CoffeeTech.ManagementAuthenticationContext.AuthenticationRepository "" ""
        CoffeeTech.ManagementAuthenticationContext.UserApplicationService -> CoffeeTech.ManagementAuthenticationContext.DomainLayer "" ""
        CoffeeTech.ManagementAuthenticationContext.AuthenticationApplicationService -> CoffeeTech.ManagementAuthenticationContext.DomainLayer "" ""
        CoffeeTech.ManagementAuthenticationContext.UsersRepository -> CoffeeTech.SQLServer "" ""
        CoffeeTech.ManagementAuthenticationContext.AuthenticationRepository -> CoffeeTech.SQLServer "" ""
        CoffeeTech.WebApplication -> CoffeeTech.ManagementAuthenticationContext.UsersController "API Request" "JSON/HTTPS"
        CoffeeTech.MobileApplication -> CoffeeTech.ManagementAuthenticationContext.UsersController "API Request" "JSON/HTTPS"
        CoffeeTech.WebApplication -> CoffeeTech.ManagementAuthenticationContext.AuthenticationController "API Request" "JSON/HTTPS"
        CoffeeTech.MobileApplication -> CoffeeTech.ManagementAuthenticationContext.AuthenticationController "API Request" "JSON/HTTPS"
        
        //NotificationsAlertsContext
        CoffeeTech.RestFullAPI -> CoffeeTech.NotificationsAlertsContext.MessageController "" ""
        CoffeeTech.NotificationsAlertsContext.MessageController -> CoffeeTech.NotificationsAlertsContext.MessageApplicationService "" ""
        CoffeeTech.NotificationsAlertsContext.MessageApplicationService -> CoffeeTech.NotificationsAlertsContext.MessageRepository "" ""
        CoffeeTech.NotificationsAlertsContext.MessageApplicationService -> CoffeeTech.NotificationsAlertsContext.DomainLayer "" ""
        CoffeeTech.NotificationsAlertsContext.MessageRepository -> CoffeeTech.SQLServer "" ""
        PushNotificationProvider ->  CoffeeTech.NotificationsAlertsContext.MessageApplicationService "" "" 
        CoffeeTech.WebApplication -> CoffeeTech.NotificationsAlertsContext.MessageController "API Request" "JSON/HTTPS"
        CoffeeTech.MobileApplication -> CoffeeTech.NotificationsAlertsContext.MessageController "API Request" "JSON/HTTPS"
        
        //FarmManagementContext
        CoffeeTech.RestFullAPI -> CoffeeTech.FarmManagementContext.FarmManagementController "" ""
        CoffeeTech.FarmManagementContext.FarmManagementController -> CoffeeTech.FarmManagementContext.FarmManagementApplicationService "" ""
        CoffeeTech.FarmManagementContext.FarmManagementApplicationService -> CoffeeTech.FarmManagementContext.FarmManagementRepository "" ""
        CoffeeTech.FarmManagementContext.FarmManagementApplicationService -> CoffeeTech.FarmManagementContext.DomainLayer "" ""
        CoffeeTech.FarmManagementContext.FarmManagementRepository -> CoffeeTech.SQLServer "" ""
        CoffeeTech.WebApplication -> CoffeeTech.FarmManagementContext.FarmManagementController "API Request" "JSON/HTTPS"
        CoffeeTech.MobileApplication -> CoffeeTech.FarmManagementContext.FarmManagementController "API Request" "JSON/HTTPS"
    }

    views {
        systemContext CoffeeTech "Contexto" "Context Diagram" {
            include Manager 
            include Farmer 
            include CoffeeTech 
            include PushNotificationProvider
            include MeteorologicalService
            include MLmodelAPI
        }

        container CoffeeTech "Contenedores" "ContainerCoffeeTech" {
            include Manager
            include Farmer
            include PushNotificationProvider
            include MeteorologicalService
            include MLmodelAPI
            include CoffeeTech.RestFullAPI
            include CoffeeTech.MachineLearningAPI
            include CoffeeTech.WebApplication
            include CoffeeTech.SinglePageApplication
            include CoffeeTech.EdgeAPI
            include CoffeeTech.MobileApplication
            include CoffeeTech.EmbeddedApp
            include CoffeeTech.EdgeSPA
            include CoffeeTech.SQLServer
        }
        
        component CoffeeTech.SensorMonitoringContext "ComponentSensorMonitoring" {
            include CoffeeTech.WebApplication
            include CoffeeTech.MobileApplication
            include CoffeeTech.SensorMonitoringContext.DevicesController
            include CoffeeTech.SensorMonitoringContext.DevicesApplicationService
            include CoffeeTech.SensorMonitoringContext.DevicesRepository 
            include CoffeeTech.SensorMonitoringContext.DomainLayer
            include CoffeeTech.SQLServer
        }
        
        component CoffeeTech.ContextAgronomicRecommendations "ComponenteRecommendations" {
            include CoffeeTech.WebApplication
            include CoffeeTech.MobileApplication
            include CoffeeTech.ContextAgronomicRecommendations.RecommendationsController
            include CoffeeTech.ContextAgronomicRecommendations.RecommendationsApplicationService
            include CoffeeTech.ContextAgronomicRecommendations.PredictionsRepository 
            include CoffeeTech.ContextAgronomicRecommendations.DomainLayer
            include CoffeeTech.SQLServer
            include MeteorologicalService
            include MLmodelAPI
        }
        
        component CoffeeTech.ManagementAuthenticationContext "ComponenteAutenticacion" {
            include CoffeeTech.WebApplication
            include CoffeeTech.MobileApplication
            include CoffeeTech.ManagementAuthenticationContext.UsersController
            include CoffeeTech.ManagementAuthenticationContext.UserApplicationService
            include CoffeeTech.ManagementAuthenticationContext.UsersRepository 
            include CoffeeTech.ManagementAuthenticationContext.AuthenticationController
            include CoffeeTech.ManagementAuthenticationContext.AuthenticationApplicationService
            include CoffeeTech.ManagementAuthenticationContext.AuthenticationRepository
            include CoffeeTech.ManagementAuthenticationContext.DomainLayer
            include CoffeeTech.SQLServer
        }
        
        component CoffeeTech.NotificationsAlertsContext "ComponenteNotificaciones" {
            include CoffeeTech.WebApplication
            include CoffeeTech.MobileApplication
            include CoffeeTech.NotificationsAlertsContext.MessageController
            include CoffeeTech.NotificationsAlertsContext.MessageApplicationService
            include CoffeeTech.NotificationsAlertsContext.MessageRepository 
            include CoffeeTech.NotificationsAlertsContext.DomainLayer
            include CoffeeTech.SQLServer
            include PushNotificationProvider
        }
        
        component CoffeeTech.FarmManagementContext "ComponenteFarmManagement" {
            include CoffeeTech.WebApplication
            include CoffeeTech.MobileApplication
            include CoffeeTech.FarmManagementContext.FarmManagementController
            include CoffeeTech.FarmManagementContext.FarmManagementApplicationService
            include CoffeeTech.FarmManagementContext.FarmManagementRepository 
            include CoffeeTech.FarmManagementContext.DomainLayer
            include CoffeeTech.SQLServer
        }
        
        styles {
            element "Operador" {
                shape "Person" 
                background "#26cf48" 
                color "#ffffff" 
            }
            element "BD" {
                shape "Cylinder" 
                background "#ec0e0e" 
                color "#ffffff" 
            }
            element "Person" {
                shape "Person" 
                background "#232ecd" 
                color "#ffffff" 
            }
            element "CoffeeTech" {
                shape "RoundedBox" 
                background "#d49816"
                color "#ffffff"
            }
            element "Servicio"{
                shape "Hexagon"
                background "#B057F5"
                color "#ffffff"
            }
            element "Mobile App" {
                shape MobileDeviceLandscape
                background #438dd5
                color "#ffffff"
            }
            element "Web Browser" {
                shape WebBrowser
                background #438dd5
                color "#ffffff"
            }
            element "Contenedor" {
                background #85bbf0
                color "#ffffff"
            }
            element "API" {
                background #85bbf0
                color "#ffffff"
            }
        }

    }

}
